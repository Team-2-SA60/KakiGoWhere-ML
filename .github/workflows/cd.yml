name: CD Pipeline

on:
  workflow_run:
    workflows: ["CI Pipeline"]
    types:
      - completed

env:
  IMAGE_NAME: kakigowhere-ml:latest

jobs:
  docker-build-and-push:
    if: >
      github.event.workflow_run.head_branch == 'main'
#      github.event.workflow_run.conclusion == 'success' &&
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_TOKEN }}

    - name: Build Docker Image
      run: docker build -f ./docker/Dockerfile -t ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }} .

    - name: Push Docker Image
      run: docker push ${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}

  deploy:
    needs: docker-build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Add SSH host to known_hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan ${{ secrets.DROPLET_IP }} > ~/.ssh/known_hosts
          
      - name: Write private SSH key
        run: |
          echo "${{ secrets.SSH_PRIVATE }}" > ~/.ssh/id_rsa
          chmod 400 ~/.ssh/id_rsa

      - name: Cache pip & Ansible
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Setup Ansible
        run: |
          pip install ansible

      - name: Make Ansible Inventory
        working-directory: ansible
        run: |
          echo "[ml]" > inventory.ini
          echo "${{ secrets.DROPLET_IP }} ansible_user=root ansible_ssh_private_key_file=~/.ssh/id_rsa" >> inventory.ini

      - name: Run Ansible Playbook
        working-directory: ansible
        run: |
          ansible-playbook -i inventory.ini playbook.yml \
            --extra-vars "docker_image=${{ secrets.DOCKER_USERNAME }}/${{ env.IMAGE_NAME }}"